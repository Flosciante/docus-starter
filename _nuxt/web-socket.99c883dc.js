import{b as l}from"./index.c2b5f797.js";import{r as u}from"./asyncData.c75aa4f2.js";import"./runtime-core.esm-bundler.fd6e27b4.js";import"./entry.8f3a43b0.js";import"./DocsAsideTree.f0ab10c7.js";import"./cookie.894ea2eb.js";import"./Container.ccea6b89.js";import"./query.c3f7607a.js";const t={log:(...n)=>console.log("[Content]",...n),warn:(...n)=>console.warn("[Content]",...n)};let e;function C(){if(!window.WebSocket){t.warn("Could not enable hot reload, your browser does not support WebSocket.");return}const n=o=>{try{if(!JSON.parse(o.data))return;u()}catch{}},s=()=>t.log("WS connected!"),a=o=>{switch(o.code){case"ECONNREFUSED":r(!0);break;default:t.warn("WS Error:",o);break}},i=o=>{o.code===1e3||o.code===1005?t.log("WS closed!"):r(!0)},r=(o=!1)=>{if(o){t.log("WS reconnecting.."),setTimeout(r,1e3);return}if(e){try{e.close()}catch{}e=void 0}const c=`${l().public.content.wsUrl}ws`;t.log(`WS connect to ${c}`),e=new WebSocket(c),e.onopen=s,e.onmessage=n,e.onerror=a,e.onclose=i};return r(),{connect:r}}export{C as useContentWebSocket};
